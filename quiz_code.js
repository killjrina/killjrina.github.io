// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∞
document.addEventListener('DOMContentLoaded', function() {
    // –≠–ª–µ–º–µ–Ω—Ç—ã DOM
    const questionElement = document.querySelector('.question');
    const answersElement = document.querySelector('.answers');
    const nextButton = document.querySelector('.next-btn');
    const restartButton = document.querySelector('.restart-btn');
    const quizContainer = document.querySelector('.quiz-container');
    const resultContainer = document.querySelector('.result-container');
    const resultDescription = document.querySelector('.result-description');
    const progressElement = document.querySelector('.progress');
    const questionCountElement = document.querySelector('.question-count');
    const currentQuestionElement = document.querySelector('.current');
    const totalQuestionsElement = document.querySelector('.total');

    // –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    let currentQuestionIndex = 0;
    let userAnswers = {};
    const totalQuestions = quiz.length;

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ç–µ—Å—Ç–∞
    function initTest() {
        totalQuestionsElement.textContent = totalQuestions;
        showQuestion();
        updateProgress();
    }

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π –≤–æ–ø—Ä–æ—Å
    function showQuestion() {
        const currentQuestion = quiz[currentQuestionIndex];
        
        // –û–±–Ω–æ–≤–ª—è–µ–º –Ω–æ–º–µ—Ä –≤–æ–ø—Ä–æ—Å–∞
        currentQuestionElement.textContent = currentQuestionIndex + 1;
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤–æ–ø—Ä–æ—Å
        questionElement.textContent = currentQuestion.q;
        
        // –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–µ –æ—Ç–≤–µ—Ç—ã
        answersElement.innerHTML = '';
        
        // –°–æ–∑–¥–∞–µ–º –≤–∞—Ä–∏–∞–Ω—Ç—ã –æ—Ç–≤–µ—Ç–æ–≤
        for (const [key, answerText] of Object.entries(currentQuestion.a)) {
            const answerItem = document.createElement('li');
            answerItem.className = 'answer-item';
            answerItem.innerHTML = `
                <span class="answer-text">${answerText}</span>
            `;
            
            // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –æ—Ç–≤–µ—Ç–∞
            answerItem.addEventListener('click', function() {
                selectAnswer(key, answerItem);
            });
            
            answersElement.appendChild(answerItem);
        }
        
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª–µ–µ"
        nextButton.disabled = true;
    }

    // –í—ã–±–æ—Ä –æ—Ç–≤–µ—Ç–∞
    function selectAnswer(answerKey, answerElement) {
        // –°–Ω–∏–º–∞–µ–º –≤—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤
        document.querySelectorAll('.answer-item').forEach(item => {
            item.classList.remove('selected');
        });
        
        // –í—ã–¥–µ–ª—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç
        answerElement.classList.add('selected');
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        userAnswers[currentQuestionIndex] = answerKey;
        
        // –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –∫–Ω–æ–ø–∫—É "–î–∞–ª–µ–µ"
        nextButton.disabled = false;
    }

    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å-–±–∞—Ä–∞
    function updateProgress() {
        const progress = ((currentQuestionIndex + 1) / totalQuestions) * 100;
        progressElement.style.width = `${progress}%`;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–î–∞–ª–µ–µ"
    nextButton.addEventListener('click', function() {
        if (nextButton.disabled) return;
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –≤–æ–ø—Ä–æ—Å—É –∏–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (currentQuestionIndex < totalQuestions - 1) {
            currentQuestionIndex++;
            showQuestion();
            updateProgress();
        } else {
            showResult();
        }
    });

    // –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    function showResult() {
        // –ü–æ–¥—Å—á–∏—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
        const resultCounts = {};
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω—É–ª—è–º–∏
        const allDirections = ['s', 'e', 'cul', 'med', 'ev'];
        allDirections.forEach(direction => {
            resultCounts[direction] = 0;
        });
        
        // –°—á–∏—Ç–∞–µ–º –≥–æ–ª–æ—Å–∞
        for (const answerKey of Object.values(userAnswers)) {
            if (resultCounts[answerKey] !== undefined) {
                resultCounts[answerKey]++;
            }
        }
        
        // –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤
        const maxCount = Math.max(...Object.values(resultCounts));
        
        // –ù–∞—Ö–æ–¥–∏–º –≤—Å–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±–∞–ª–ª–æ–≤
        const topResults = Object.entries(resultCounts)
            .filter(([_, count]) => count === maxCount)
            .map(([direction]) => direction);
        
        // –§–æ—Ä–º–∏—Ä—É–µ–º HTML –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        let resultsHTML = '';
        
        if (topResults.length === 1) {
            // –ï—Å–ª–∏ —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç
            const result = answers[topResults[0]];
            resultsHTML = `
                <div class="single-result">
                    <div class="result-emoji">üéØ</div>
                    <div class="result-text">${result.description}</div>
                </div>
            `;
        } else {
            // –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º –±–∞–ª–ª–æ–≤
            resultsHTML = `
                <div class="multiple-results">
                    <div class="results-header">
                        <div class="result-emoji">üéä</div>
                        <h3>–£ –≤–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –ø–æ–¥—Ö–æ–¥—è—â–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π! üöÄ</h3>
                        <p>–ö–∞–∂–¥–æ–µ –∏–∑ —ç—Ç–∏—Ö –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–π –Ω–∞–±—Ä–∞–ª–æ –æ–¥–∏–Ω–∞–∫–æ–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –±–∞–ª–ª–æ–≤:</p>
                    </div>
                    <div class="results-list">
                        ${topResults.map(direction => {
                            const result = answers[direction];
                            return `
                                <div class="result-item">
                                    <div class="result-item-content">
                                        ${result.description}
                                    </div>
                                </div>
                            `;
                        }).join('')}
                    </div>
                    <div class="results-footer">
                        <p>–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ, —á—Ç–æ –≤–∞–º –±–æ–ª—å—à–µ –ø–æ –¥—É—à–µ! üí´</p>
                    </div>
                </div>
            `;
        }
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
        const statsHTML = `
            <div class="results-stats">
                <h4>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞—à–∏—Ö –æ—Ç–≤–µ—Ç–æ–≤:</h4>
                <div class="stats-bars">
                    ${Object.entries(resultCounts)
                        .sort(([,a], [,b]) => b - a)
                        .map(([direction, count]) => {
                            const percentage = (count / totalQuestions * 100).toFixed(0);
                            const resultName = getDirectionName(direction);
                            return `
                                <div class="stat-item">
                                    <div class="stat-info">
                                        <span class="stat-name">${resultName}</span>
                                        <span class="stat-count">${count} –±–∞–ª–ª–æ–≤ (${percentage}%)</span>
                                    </div>
                                    <div class="stat-bar">
                                        <div class="stat-bar-fill" style="width: ${percentage}%"></div>
                                    </div>
                                </div>
                            `;
                        }).join('')}
                </div>
            </div>
        `;
        
        // –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        resultDescription.innerHTML = resultsHTML + statsHTML;
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        quizContainer.classList.add('hidden');
        resultContainer.classList.remove('hidden');
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    function getDirectionName(direction) {
        const names = {
            's': 'ü§ù –°–æ—Ü–∏–∞–ª—å–Ω–æ–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ',
            'e': 'üå± –≠–∫–æ–ª–æ–≥–∏—á–µ—Å–∫–æ–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ', 
            'cul': 'üé® –ö—É–ª—å—Ç—É—Ä–Ω–æ–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ',
            'med': '‚öïÔ∏è –ú–µ–¥–∏—Ü–∏–Ω—Å–∫–æ–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ',
            'ev': 'üé™ –°–æ–±—ã—Ç–∏–π–Ω–æ–µ –≤–æ–ª–æ–Ω—Ç–µ—Ä—Å—Ç–≤–æ'
        };
        return names[direction] || direction;
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
    restartButton.addEventListener('click', function() {
        // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        currentQuestionIndex = 0;
        userAnswers = {};
        
        // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–µ—Å—Ç–∞
        resultContainer.classList.add('hidden');
        quizContainer.classList.remove('hidden');
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç –∑–∞–Ω–æ–≤–æ
        initTest();
    });

    // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
    initTest();
});